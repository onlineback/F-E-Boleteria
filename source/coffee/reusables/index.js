// Generated by CoffeeScript 1.7.1
yOSON.AppCore.addModule("validation", (function(Sb) {
  return {
    init: function(oParams) {
      var extraOpt, forms;
      forms = oParams.form.split(",");
      extraOpt = oParams.config;
      return $.each(forms, function(index, value) {
        var prop, settings;
        settings = {};
        value = $.trim(value);
        for (prop in yOSON.require[value]) {
          settings[prop] = yOSON.require[value][prop];
        }
        if (typeof extraOpt !== "undefined") {
          settings = $.extend(settings, extraOpt);
        }
        return $(value).validate(settings);
      });
    }
  };
}), ["data/require.js", "plugins/jqValidate.js"]);

yOSON.AppCore.addModule("modResponsive", (function(Sb) {
  var body, currentWidth, dispatchResponsive, htm, resetClass, tmpWidth, win;
  win = $(window);
  htm = $("html")[0];
  body = $("body");
  currentWidth = 0;
  tmpWidth = 0;
  resetClass = function() {
    return body.removeClass("columns-4 columns-5 columns-6 columns-7 columns-8 columns-9");
  };
  dispatchResponsive = function(wdth) {
    var classNumber, number;
    if (wdth > 1024) {
      number = Math.floor(wdth / 250);
      classNumber = number > 9 ? "columns-9" : "columns-" + number;
      if (!body.hasClass(classNumber)) {
        resetClass();
        return body.addClass(classNumber);
      }
    } else {
      resetClass();
      return body.addClass("columns-4");
    }
  };
  return {
    init: function(oParams) {
      win.on("resize", function(e) {
        tmpWidth = htm.clientWidth;
        if (tmpWidth !== currentWidth) {
          currentWidth = tmpWidth;
          return dispatchResponsive(currentWidth);
        }
      });
      return win.trigger("resize");
    }
  };
}));

yOSON.AppCore.addModule("menuHead", (function(Sb) {
  var animateHide, animateShow, bindEvents, catchDom, dom, st, zindex;
  st = {
    "lnkMenu": ".lnkDropDown",
    "ctnMenu": ".head-menu"
  };
  dom = {};
  zindex = 90;
  catchDom = function() {
    return dom.lnkMenu = $(st.lnkMenu);
  };
  bindEvents = function() {
    if (dom.lnkMenu.length > 0) {
      return dom.lnkMenu.on("click", function(e) {
        var $this, target;
        e.preventDefault();
        $this = $(this);
        target = $this.parent().find(".head-menu");
        if (target.is(":visible")) {
          animateHide(target);
        } else {
          zindex++;
          animateShow(target);
        }
      });
    }
  };
  animateShow = function(el) {
    el.css("z-index", zindex);
    el.show();
    return el.animate({
      "top": "110%",
      "opacity": 1
    }, 300, "easeInExpo");
  };
  animateHide = function(el) {
    return el.animate({
      "top": "81%",
      "opacity": 0
    }, 300, "easeOutExpo", function() {
      return el.hide();
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("modalInfo", (function(Sb) {
  var bindEvents, catchDom, dom, evtCloseModal, getStylModal, opts, removeModal, setTemplate;
  opts = {
    tpl: "#tplAlert",
    body: "body",
    btnClose: false,
    classBtnClose: ".lnk-closeAlertModal"
  };
  dom = {};
  catchDom = function() {
    dom.tplAlert = _.template($(opts.tpl).html());
    return dom.body = $(opts.body);
  };
  bindEvents = function() {
    var ctn, stylModal, templateModal, wrapModal;
    ctn = $(dom.tplAlert(opts).replace(/[\n\r]/g, ""));
    templateModal = setTemplate();
    wrapModal = templateModal.find('.wrap-alertModal');
    wrapModal.css({
      "visibility": "hidden"
    });
    wrapModal.append(ctn);
    dom.body.append(templateModal);
    stylModal = getStylModal(ctn);
    wrapModal.css(stylModal);
    evtCloseModal(templateModal);
  };
  setTemplate = function() {
    var tpl;
    tpl = $("<div class='overlay-alertModal'><div class='wrap-alertModal'></div></div>");
    return tpl;
  };
  getStylModal = function(target) {
    var hght, wdth;
    wdth = target.width();
    hght = target.height();
    return {
      "margin-left": -wdth / 2,
      "margin-top": -hght / 2,
      "visibility": "visible"
    };
  };
  evtCloseModal = function(el) {
    el.on("click", function(e) {
      var target;
      target = $(e.target);
      if (target.hasClass("overlay-alertModal")) {
        return removeModal(el);
      }
    });
    if (opts.btnClose) {
      return $(opts.classBtnClose, el).on("click", function() {
        return removeModal(el);
      });
    }
  };
  removeModal = function(el) {
    return el.fadeOut(400, function() {
      return el.remove();
    });
  };
  return {
    init: function(oParams) {
      return yOSON.AppCore.chargeDepends(["plugins/jqUnderscore.js", "data/alerts.js"], function() {
        opts = $.extend(opts, yOSON.alertModal[oParams.modal]);
        catchDom();
        return bindEvents();
      });
    }
  };
}));

yOSON.AppCore.addModule("modalConfirm", (function(Sb) {
  var bindEvents, catchDom, dom, evtCloseModal, getStylModal, opts, removeModal, setTemplate;
  opts = {
    tplConfirm: "#tplConfirm",
    body: "body",
    classBtnClose: ".lnk-closeAlertModal"
  };
  dom = {};
  catchDom = function() {
    dom.tplConfirm = _.template($(opts.tplConfirm).html());
    return dom.body = $(opts.body);
  };
  bindEvents = function() {
    var ctn, stylModal, templateModal, wrapModal;
    ctn = $(dom.tplAlert(opts).replace(/[\n\r]/g, ""));
    templateModal = setTemplate();
    wrapModal = templateModal.find('.wrap-alertModal');
    wrapModal.css({
      "visibility": "hidden"
    });
    wrapModal.append(ctn);
    dom.body.append(templateModal);
    stylModal = getStylModal(ctn);
    wrapModal.css(stylModal);
    evtCloseModal(templateModal);
  };
  setTemplate = function() {
    var tpl;
    tpl = $("<div class='overlay-alertModal'><div class='wrap-alertModal'></div></div>");
    return tpl;
  };
  getStylModal = function(target) {
    var hght, wdth;
    wdth = target.width();
    hght = target.height();
    return {
      "margin-left": -wdth / 2,
      "margin-top": -hght / 2,
      "visibility": "visible"
    };
  };
  evtCloseModal = function(el) {
    el.on("click", function(e) {
      var target;
      target = $(e.target);
      if (target.hasClass("overlay-alertModal")) {
        return removeModal(el);
      }
    });
    if (opts.btnClose) {
      return $(opts.classBtnClose, el).on("click", function() {
        return removeModal(el);
      });
    }
  };
  removeModal = function(el) {
    return el.fadeOut(400, function() {
      return el.remove();
    });
  };
  return {
    init: function(oParams) {
      return yOSON.AppCore.chargeDepends(["plugins/jqUnderscore.js", "data/alerts.js"], function() {
        opts = $.extend(opts, yOSON.alertModal[oParams.modal]);
        catchDom();
        return bindEvents();
      });
    }
  };
}));

yOSON.AppCore.addModule("changeRadios", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "inactivo": ".decorOpt-label"
  };
  dom = {};
  catchDom = function() {
    return dom.inactivo = $(st.inactivo);
  };
  bindEvents = function() {
    var cont;
    cont = 0;
    return dom.inactivo.on("click", function() {
      var $this, activo;
      $this = $(this);
      if (!$this.hasClass("fix2quad")) {
        activo = $this.parents('.form-group').find(".active");
        if (activo) {
          activo.removeClass("active");
          return $(this).addClass("active");
        }
      }
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("changeCheckbox", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "inactivo": ".fix2quad"
  };
  dom = {};
  catchDom = function() {
    return dom.inactivo = $(st.inactivo);
  };
  bindEvents = function() {
    dom.inactivo.on("click", function(e) {
      var $this;
      $this = $(this);
      if (e.target.localName === "label") {
        if ($this.hasClass("active")) {
          return $(this).removeClass("active");
        } else {
          return $(this).addClass("active");
        }
      }
    });
    return dom.inactivo.on("change", function() {
      var $this;
      $this = $(this);
      if ($this.hasClass("error")) {

      } else {

      }
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("hideShowComponent", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "ctnHideShow": ".ctnHideShow",
    "lnkHideShow": ".lnkHideShow"
  };
  dom = {};
  catchDom = function() {
    return dom.lnkHideShow = $(st.lnkHideShow);
  };
  bindEvents = function() {
    dom.lnkHideShow.on("click", function(e) {
      var $this, parent, tag, target, visible;
      $this = $(this);
      visible = $this.data("visible");
      tag = e.target.tagName.toLowerCase();
      if (tag !== "input") {
        parent = $this.parents(st.ctnHideShow);
        target = $(parent.data("target"));
        if (visible && !target.is(":visible")) {
          target.slideDown("fast");
        }
        if (!visible && target.is(":visible")) {
          return target.slideUp("fast");
        }
      }
    });
    return $(st.lnkHideShow + ".active").trigger("click");
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("chckHideShow", (function(Sb) {
  var bindEvents, catchDom, dom, evtChck, st;
  st = {
    "chck": ".chckHShow"
  };
  dom = {};
  catchDom = function() {
    return dom.chck = $(st.chck);
  };
  evtChck = function() {
    var $this, target;
    $this = $(this);
    target = $($this.data("target"));
    if ($this.is(":checked")) {
      return target.slideDown("fast");
    } else {
      return target.slideUp("fast");
    }
  };
  bindEvents = function() {
    dom.chck.on("click", function(e) {
      return evtChck.call(this);
    });
    return dom.chck.each(function() {
      return evtChck.call(this);
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("multiHSComponent", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "ctnMultiHS": ".ctnMultiHS",
    "lnkMultiHS": ".lnkMultiHS"
  };
  dom = {};
  catchDom = function() {
    return dom.ctnMultiHS = $(st.ctnMultiHS);
  };
  bindEvents = function() {
    dom.ctnMultiHS.each(function() {
      var lnks, parent, targets;
      parent = $(this);
      targets = $("." + parent.data("class"));
      lnks = parent.find(st.lnkMultiHS);
      return lnks.on("click", function(e) {
        var $this, tag, target;
        $this = $(this);
        tag = e.target.tagName.toLowerCase();
        target = $($this.data("target"));
        if (tag !== "input") {
          targets.not(target).hide();
          return target.show();
        }
      });
    });
    return $(st.lnkMultiHS + ".active").trigger("click");

    /*lnk.on "click", (e)->
    			$this = $(this)
    			visible= $this.data "visible"
    			tag= e.target.tagName.toLowerCase()
    			if tag isnt "input"
    				parent= $this.parents(st.ctnHideShow)
    				target= $ parent.data("target")
    				if visible and !target.is(":visible")
    					target.slideDown "fast"
    				if !visible and target.is(":visible")
    					target.slideUp "fast"
    		$(st.lnkHideShow+".active").trigger "click"
     */
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));

yOSON.AppCore.addModule("multiSelect", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "obj": ".multiselect"
  };
  dom = {};
  catchDom = function() {
    return dom.obj = $(st.obj);
  };
  bindEvents = function() {
    return dom.obj.chosen({
      no_results_text: "Oops, no se han encontrado resultados."
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}), ["plugins/jqChosen.js"]);

yOSON.AppCore.addModule("countCharacters", (function(Sb) {
  var bindEvents, catchDom, countCharacters, dom, st, valor;
  st = {
    "obj": ".countCharacters"
  };
  dom = {};
  valor = 0;
  catchDom = function() {
    return dom.obj = $(st.obj);
  };
  countCharacters = function(obj) {
    var numChar;
    numChar = obj.data("count");
    return dom.obj.on("input", function() {
      var $this, left;
      $this = $(this);
      left = numChar - $this.val().length;
      if (left >= 0) {
        return $this.parent().find(".charLeft").html("Le quedan " + left + " caracteres.");
      } else {
        valor = $this.val().substring(0, 140);
        return $this.val(valor);
      }
    });
  };
  bindEvents = function() {
    return countCharacters(dom.obj);
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}), ["plugins/jqChosen.js"]);

yOSON.AppCore.addModule("datePicker", (function(Sb) {
  var bindDatePicker, bindEvents, catchDom, dom, st, valor;
  st = {
    "obj": ".datePicker"
  };
  dom = {};
  valor = 0;
  catchDom = function() {
    return dom.obj = $(st.obj);
  };
  bindDatePicker = function(obj) {
    return dom.obj.datepicker({
      format: "dd-mm-yyyy",
      changeMonth: true,
      changeYear: true,
      maxDate: "0",
      yearRange: "1912:2014"
    });
  };
  bindEvents = function() {
    return bindDatePicker(dom.obj);
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}), ["plugins/jqUI.js"]);

yOSON.AppCore.addModule("tipsy", (function(Sb) {
  var bindEvents, catchDom, dom, st;
  st = {
    "tip": ".tipsyItem"
  };
  dom = {};
  catchDom = function() {
    return dom.tip = $(st.tip);
  };
  bindEvents = function() {
    return dom.tip.tipsy({
      gravity: 's',
      html: true,
      classTipsy: 'cmsTipsy',
      opacity: 1
    });
  };
  return {
    init: function(oParams) {
      catchDom();
      return bindEvents();
    }
  };
}));
